apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/cors-allow-credentials: 'true'
    nginx.ingress.kubernetes.io/cors-allow-headers: 'Content-Type, authorization'
    nginx.ingress.kubernetes.io/cors-allow-methods: 'PUT, GET, POST, OPTIONS, PATCH, DELETE'
    nginx.ingress.kubernetes.io/cors-allow-origin: '*'
    nginx.ingress.kubernetes.io/enable-access-log: 'true'
    nginx.ingress.kubernetes.io/enable-cors: 'true'
    nginx.ingress.kubernetes.io/enable-rewrite-log: 'true'
    nginx.ingress.kubernetes.io/proxy-body-size: '0'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '3600'
    nginx.ingress.kubernetes.io/proxy-send-timeout: '600'
  labels:
    argocd.argoproj.io/instance: demo-app
  name: app-demo-ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
    - host: be.dev.altronstudio.com
      http:
        paths:
          - backend:
              service:
                name: app-demo-svc
                port:
                  number: 80
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - be.dev.altronstudio.com
      secretName: dev-altronstudio-com-wildcard-cert-tls
